// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to List all users in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "List users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to create new API user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "CreateUser",
                        "name": "CreateUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to delete a API user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "description": "DeleteUser",
                        "name": "DeleteUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.DeleteUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to List all categories from a workspace in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "List categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Create a single category in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Register a category",
                "parameters": [
                    {
                        "description": "PostCategory",
                        "name": "PostCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.PostCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Delete a single category in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "description": "DeleteCategory",
                        "name": "DeleteCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.DeleteCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Edit a single category in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Edit a category",
                "parameters": [
                    {
                        "description": "PatchCategory",
                        "name": "PatchCategory",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.PatchCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/default": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Create default categories in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Register default categories for a workspace",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goods": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to List all goods from a workspace in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goods"
                ],
                "summary": "List goods",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Create a single good in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goods"
                ],
                "summary": "Register a good",
                "parameters": [
                    {
                        "description": "PostGood",
                        "name": "PostGood",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.PostGood"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Delete a single good from database by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goods"
                ],
                "summary": "Delete a good",
                "parameters": [
                    {
                        "description": "DeleteGood",
                        "name": "DeleteGood",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.DeleteGood"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to Edit a single good in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goods"
                ],
                "summary": "Edit a good",
                "parameters": [
                    {
                        "description": "PatchGood",
                        "name": "PatchGood",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.PatchGood"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goods/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Endpoint used to get one good from a workspace in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goods"
                ],
                "summary": "Get good",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Endpoint used to login API User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login with username and password",
                "parameters": [
                    {
                        "description": "UserLogin",
                        "name": "UserLogin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.foo@mail.com"
                },
                "password": {
                    "type": "string",
                    "example": "qwerty"
                },
                "username": {
                    "type": "string",
                    "example": "john.foo"
                },
                "workspace": {
                    "type": "string",
                    "example": "principal"
                }
            }
        },
        "core.DeleteCategory": {
            "type": "object",
            "required": [
                "ID"
            ],
            "properties": {
                "ID": {
                    "type": "string"
                }
            }
        },
        "core.DeleteGood": {
            "type": "object",
            "required": [
                "ID"
            ],
            "properties": {
                "ID": {
                    "type": "string"
                }
            }
        },
        "core.DeleteUser": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "example": "john.foo"
                }
            }
        },
        "core.PatchCategory": {
            "type": "object",
            "required": [
                "Color",
                "ID",
                "Name"
            ],
            "properties": {
                "Color": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "core.PatchGood": {
            "type": "object",
            "required": [
                "BuyDate",
                "Categories",
                "CreatedAt",
                "Expire",
                "ID",
                "ImageURL",
                "Name"
            ],
            "properties": {
                "BuyDate": {
                    "type": "string"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "CreatedAt": {
                    "type": "string"
                },
                "Expire": {
                    "type": "string"
                },
                "ID": {
                    "type": "string"
                },
                "ImageURL": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "core.PostCategory": {
            "type": "object",
            "required": [
                "Color",
                "Name"
            ],
            "properties": {
                "Color": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "core.PostGood": {
            "type": "object",
            "required": [
                "BuyDate",
                "Categories",
                "Expire",
                "Name"
            ],
            "properties": {
                "BuyDate": {
                    "type": "string"
                },
                "Categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Expire": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "core.UserLogin": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "Qwerty"
                },
                "username": {
                    "type": "string",
                    "example": "john.foo"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
