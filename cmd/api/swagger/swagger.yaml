definitions:
  authcore.UserLogin:
    properties:
      password:
        example: Qwerty
        type: string
      username:
        example: john.foo
        type: string
    required:
    - password
    - username
    type: object
  core.DeleteCategory:
    properties:
      ID:
        type: string
      Workspace:
        type: string
    required:
    - ID
    - Workspace
    type: object
  core.DeleteGood:
    properties:
      ID:
        type: string
    type: object
  core.PatchCategory:
    properties:
      Color:
        type: string
      ID:
        type: string
      Name:
        type: string
      Workspace:
        type: string
    required:
    - Color
    - ID
    - Name
    - Workspace
    type: object
  core.PatchGood:
    properties:
      BuyDate:
        type: string
      Categories:
        items:
          type: string
        type: array
      CreatedAt:
        type: string
      Expire:
        type: string
      ID:
        type: string
      Image_url:
        type: string
      Name:
        type: string
      Workspace:
        type: string
    type: object
  core.PostCategory:
    properties:
      Color:
        type: string
      Name:
        type: string
      Workspace:
        type: string
    required:
    - Color
    - Name
    - Workspace
    type: object
  core.PostDefaultCategories:
    properties:
      Workspace:
        type: string
    required:
    - Workspace
    type: object
  core.PostGood:
    properties:
      BuyDate:
        type: string
      Categories:
        items:
          type: string
        type: array
      Expire:
        type: string
      Name:
        type: string
      Workspace:
        type: string
    required:
    - BuyDate
    - Categories
    - Expire
    - Name
    - Workspace
    type: object
info:
  contact: {}
paths:
  /categories:
    delete:
      consumes:
      - application/json
      description: Endpoint used to Delete a single category in database
      parameters:
      - description: DeleteCategory
        in: body
        name: DeleteCategory
        required: true
        schema:
          $ref: '#/definitions/core.DeleteCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a category
      tags:
      - Categories
    patch:
      consumes:
      - application/json
      description: Endpoint used to Edit a single category in database
      parameters:
      - description: PatchCategory
        in: body
        name: PatchCategory
        required: true
        schema:
          $ref: '#/definitions/core.PatchCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Edit a category
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Endpoint used to Create a single category in database
      parameters:
      - description: PostCategory
        in: body
        name: PostCategory
        required: true
        schema:
          $ref: '#/definitions/core.PostCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Register a category
      tags:
      - Categories
  /categories/{workspace}:
    get:
      description: Endpoint used to List all categories from a workspace in database
      parameters:
      - description: Workspace
        in: path
        name: workspace
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: List categories
      tags:
      - Categories
  /categories/default:
    post:
      consumes:
      - application/json
      description: Endpoint used to Create default categories in database
      parameters:
      - description: PostDefaultCategories
        in: body
        name: PostDefaultCategories
        required: true
        schema:
          $ref: '#/definitions/core.PostDefaultCategories'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Register default categories for a workspace
      tags:
      - Categories
  /goods:
    delete:
      consumes:
      - application/json
      description: Endpoint used to Delete a single good from database by ID
      parameters:
      - description: DeleteGood
        in: body
        name: DeleteGood
        required: true
        schema:
          $ref: '#/definitions/core.DeleteGood'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a good
      tags:
      - Goods
    get:
      description: Endpoint used to List all goods from a workspace in database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: List goods
      tags:
      - Goods
    patch:
      consumes:
      - application/json
      description: Endpoint used to Edit a single good in database
      parameters:
      - description: PatchGood
        in: body
        name: PatchGood
        required: true
        schema:
          $ref: '#/definitions/core.PatchGood'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Edit a good
      tags:
      - Goods
    post:
      consumes:
      - application/json
      description: Endpoint used to Create a single good in database
      parameters:
      - description: PostGood
        in: body
        name: PostGood
        required: true
        schema:
          $ref: '#/definitions/core.PostGood'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Register a good
      tags:
      - Goods
  /goods/{id}:
    get:
      description: Endpoint used to get one good from a workspace in database
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get good
      tags:
      - Goods
  /login:
    post:
      consumes:
      - application/json
      description: Endpoint used to login API User
      parameters:
      - description: UserLogin
        in: body
        name: UserLogin
        required: true
        schema:
          $ref: '#/definitions/authcore.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Login with username and password
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
